/*
 * smpptools API
 *
 * smpptools API documentation
 *
 * API version: 0.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ErrorRate struct for ErrorRate
type ErrorRate struct {
	// Error Code
	Error float32 `json:"error"`
	// Description about this error rate
	Description *string `json:"description,omitempty"`
	// Percentage this error will occur
	Rate float32 `json:"rate"`
}

// NewErrorRate instantiates a new ErrorRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorRate(error_ float32, rate float32) *ErrorRate {
	this := ErrorRate{}
	this.Error = error_
	this.Rate = rate
	return &this
}

// NewErrorRateWithDefaults instantiates a new ErrorRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorRateWithDefaults() *ErrorRate {
	this := ErrorRate{}
	return &this
}

// GetError returns the Error field value
func (o *ErrorRate) GetError() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *ErrorRate) GetErrorOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *ErrorRate) SetError(v float32) {
	o.Error = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ErrorRate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorRate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ErrorRate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ErrorRate) SetDescription(v string) {
	o.Description = &v
}

// GetRate returns the Rate field value
func (o *ErrorRate) GetRate() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Rate
}

// GetRateOk returns a tuple with the Rate field value
// and a boolean to check if the value has been set.
func (o *ErrorRate) GetRateOk() (*float32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Rate, true
}

// SetRate sets field value
func (o *ErrorRate) SetRate(v float32) {
	o.Rate = v
}

func (o ErrorRate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["error"] = o.Error
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["rate"] = o.Rate
	}
	return json.Marshal(toSerialize)
}

type NullableErrorRate struct {
	value *ErrorRate
	isSet bool
}

func (v NullableErrorRate) Get() *ErrorRate {
	return v.value
}

func (v *NullableErrorRate) Set(val *ErrorRate) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorRate) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorRate(val *ErrorRate) *NullableErrorRate {
	return &NullableErrorRate{value: val, isSet: true}
}

func (v NullableErrorRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


