/*
 * smpptools API
 *
 * smpptools API documentation
 *
 * API version: 0.0.2
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ShortMessageHex struct for ShortMessageHex
type ShortMessageHex struct {
	// List of TXT parts in hex dump
	TxtPart *string `json:"txtPart,omitempty"`
	// List of UDH parts in hex dump
	UdhPart *string `json:"udhPart,omitempty"`
}

// NewShortMessageHex instantiates a new ShortMessageHex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShortMessageHex() *ShortMessageHex {
	this := ShortMessageHex{}
	return &this
}

// NewShortMessageHexWithDefaults instantiates a new ShortMessageHex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShortMessageHexWithDefaults() *ShortMessageHex {
	this := ShortMessageHex{}
	return &this
}

// GetTxtPart returns the TxtPart field value if set, zero value otherwise.
func (o *ShortMessageHex) GetTxtPart() string {
	if o == nil || o.TxtPart == nil {
		var ret string
		return ret
	}
	return *o.TxtPart
}

// GetTxtPartOk returns a tuple with the TxtPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortMessageHex) GetTxtPartOk() (*string, bool) {
	if o == nil || o.TxtPart == nil {
		return nil, false
	}
	return o.TxtPart, true
}

// HasTxtPart returns a boolean if a field has been set.
func (o *ShortMessageHex) HasTxtPart() bool {
	if o != nil && o.TxtPart != nil {
		return true
	}

	return false
}

// SetTxtPart gets a reference to the given string and assigns it to the TxtPart field.
func (o *ShortMessageHex) SetTxtPart(v string) {
	o.TxtPart = &v
}

// GetUdhPart returns the UdhPart field value if set, zero value otherwise.
func (o *ShortMessageHex) GetUdhPart() string {
	if o == nil || o.UdhPart == nil {
		var ret string
		return ret
	}
	return *o.UdhPart
}

// GetUdhPartOk returns a tuple with the UdhPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShortMessageHex) GetUdhPartOk() (*string, bool) {
	if o == nil || o.UdhPart == nil {
		return nil, false
	}
	return o.UdhPart, true
}

// HasUdhPart returns a boolean if a field has been set.
func (o *ShortMessageHex) HasUdhPart() bool {
	if o != nil && o.UdhPart != nil {
		return true
	}

	return false
}

// SetUdhPart gets a reference to the given string and assigns it to the UdhPart field.
func (o *ShortMessageHex) SetUdhPart(v string) {
	o.UdhPart = &v
}

func (o ShortMessageHex) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TxtPart != nil {
		toSerialize["txtPart"] = o.TxtPart
	}
	if o.UdhPart != nil {
		toSerialize["udhPart"] = o.UdhPart
	}
	return json.Marshal(toSerialize)
}

type NullableShortMessageHex struct {
	value *ShortMessageHex
	isSet bool
}

func (v NullableShortMessageHex) Get() *ShortMessageHex {
	return v.value
}

func (v *NullableShortMessageHex) Set(val *ShortMessageHex) {
	v.value = val
	v.isSet = true
}

func (v NullableShortMessageHex) IsSet() bool {
	return v.isSet
}

func (v *NullableShortMessageHex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShortMessageHex(val *ShortMessageHex) *NullableShortMessageHex {
	return &NullableShortMessageHex{value: val, isSet: true}
}

func (v NullableShortMessageHex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShortMessageHex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


